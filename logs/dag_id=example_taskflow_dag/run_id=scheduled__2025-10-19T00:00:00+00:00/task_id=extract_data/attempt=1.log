{"timestamp":"2025-10-19T17:31:37.234201Z","level":"info","event":"DAG bundles loaded: dags-folder, example_dags","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager","filename":"manager.py","lineno":179}
{"timestamp":"2025-10-19T17:31:37.234637Z","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/my_test.py","logger":"airflow.models.dagbag.DagBag","filename":"dagbag.py","lineno":593}
{"timestamp":"2025-10-19T17:31:37.250090Z","level":"warning","event":"The `airflow.decorators.task` attribute is deprecated. Please use `'airflow.sdk.task'`.","category":"DeprecatedImportWarning","filename":"/opt/airflow/dags/my_test.py","lineno":3,"logger":"py.warnings"}
{"timestamp":"2025-10-19T17:31:37.250143Z","level":"warning","event":"The `airflow.operators.empty.EmptyOperator` attribute is deprecated. Please use `'airflow.providers.standard.operators.empty.EmptyOperator'`.","category":"DeprecatedImportWarning","filename":"/opt/airflow/dags/my_test.py","lineno":4,"logger":"py.warnings"}
{"timestamp":"2025-10-19T17:31:37.264420Z","level":"info","event":"Task instance is in running state","logger":"task.stdout"}
{"timestamp":"2025-10-19T17:31:37.264519Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.QUEUED","logger":"task.stdout"}
{"timestamp":"2025-10-19T17:31:37.264583Z","level":"info","event":"Current task name:extract_data","logger":"task.stdout"}
{"timestamp":"2025-10-19T17:31:37.264624Z","level":"info","event":"Dag name:example_taskflow_dag","logger":"task.stdout"}
{"timestamp":"2025-10-19T17:31:37.264664Z","level":"info","event":"ðŸ“¤ Extracting data from API...","logger":"task.stdout"}
{"timestamp":"2025-10-19T17:31:37.264068Z","level":"info","event":"Done. Returned value was: {'records': 100, 'source': 'API'}","logger":"airflow.task.operators.airflow.providers.standard.decorators.python._PythonDecoratedOperator","filename":"python.py","lineno":218}
{"timestamp":"2025-10-19T17:31:37.264197Z","level":"info","event":"Pushing xcom","ti":"RuntimeTaskInstance(id=UUID('0199fd86-cf83-7af8-b833-0bdc71526411'), task_id='extract_data', dag_id='example_taskflow_dag', run_id='scheduled__2025-10-19T00:00:00+00:00', try_number=1, dag_version_id=UUID('0199fd86-23e7-7ac0-b34e-00472e80f251'), map_index=-1, hostname='383eab8ce924', context_carrier={}, task=<Task(_PythonDecoratedOperator): extract_data>, bundle_instance=LocalDagBundle(name=dags-folder), max_tries=2, start_date=datetime.datetime(2025, 10, 19, 17, 31, 36, 63553, tzinfo=datetime.timezone.utc), end_date=None, state=<TaskInstanceState.RUNNING: 'running'>, is_mapped=False, rendered_map_index=None)","logger":"task","filename":"task_runner.py","lineno":1352}
{"timestamp":"2025-10-19T17:31:37.277102Z","level":"info","event":"Task instance in success state","logger":"task.stdout"}
{"timestamp":"2025-10-19T17:31:37.278924Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.RUNNING","logger":"task.stdout"}
{"timestamp":"2025-10-19T17:31:37.279003Z","level":"info","event":"Task operator:<Task(_PythonDecoratedOperator): extract_data>","logger":"task.stdout"}
